In file included from [01m[K/home/peter/ros2/UsbCaptureROS4/src/ros2_usbcapture/include/ros2_usbcapture/UsbCaptureSystem.h:9[m[K,
                 from [01m[K/home/peter/ros2/UsbCaptureROS4/src/ros2_usbcapture/include/ros2_usbcapture/RosNode.h:4[m[K,
                 from [01m[K/home/peter/ros2/UsbCaptureROS4/src/ros2_usbcapture/src/RosNode.cpp:1[m[K:
/usr/include/c++/9/functional: In instantiation of â€˜[01m[Kstruct std::_Bind_check_arity<void (wmj::camera_node::*)(), wmj::camera_node*, const std::_Placeholder<1>&>[m[Kâ€™:
[01m[K/usr/include/c++/9/functional:787:12:[m[K   required from â€˜[01m[Kstruct std::_Bind_helper<false, void (wmj::camera_node::*)(), wmj::camera_node*, const std::_Placeholder<1>&>[m[Kâ€™
[01m[K/usr/include/c++/9/functional:808:5:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::bind(_Func&&, _BoundArgs&& ...) [with _Func = void (wmj::camera_node::*)(); _BoundArgs = {wmj::camera_node*, const std::_Placeholder<1>&}][m[Kâ€™
[01m[K/home/peter/ros2/UsbCaptureROS4/src/ros2_usbcapture/src/RosNode.cpp:18:140:[m[K   required from here
[01m[K/usr/include/c++/9/functional:775:7:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: Wrong number of arguments for pointer-to-member
  774 |       static_assert(_Varargs::[01;31m[Kvalue[m[K
      |                               [01;31m[K~~~~~[m[K
  775 | [01;31m[K      ? sizeof...(_BoundArgs) >= _Arity::value + 1[m[K
      |       [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  776 | [01;31m[K      : sizeof...(_BoundArgs) == _Arity::value + 1[m[K,
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/peter/ros2/UsbCaptureROS4/src/ros2_usbcapture/src/RosNode.cpp:[m[K In function â€˜[01m[Kvoid wmj::timer_call_back(wmj::UsbCaptureSystem)[m[Kâ€™:
[01m[K/home/peter/ros2/UsbCaptureROS4/src/ros2_usbcapture/src/RosNode.cpp:79:13:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kpub_image[m[Kâ€™ was not declared in this scope
   79 |             [01;31m[Kpub_image[m[K->publish(std::move(msg));
      |             [01;31m[K^~~~~~~~~[m[K
In file included from [01m[K/opt/ros/foxy/include/rclcpp/callback_group.hpp:27[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/memory_strategy.hpp:24[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/executor_options.hpp:20[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/executor.hpp:33[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/executors/multi_threaded_executor.hpp:26[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146[m[K,
                 from [01m[K/home/peter/ros2/UsbCaptureROS4/src/ros2_usbcapture/include/ros2_usbcapture/UsbCaptureSystem.h:14[m[K,
                 from [01m[K/home/peter/ros2/UsbCaptureROS4/src/ros2_usbcapture/include/ros2_usbcapture/RosNode.h:4[m[K,
                 from [01m[K/home/peter/ros2/UsbCaptureROS4/src/ros2_usbcapture/src/RosNode.cpp:1[m[K:
/opt/ros/foxy/include/rclcpp/timer.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™:
[01m[K/opt/ros/foxy/include/rclcpp/timer.hpp:209:5:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[01m[K/opt/ros/foxy/include/rclcpp/timer.hpp:199:3:[m[K   required from here
[01m[K/opt/ros/foxy/include/rclcpp/timer.hpp:223:5:[m[K [01;31m[Kerror: [m[Kno match for call to â€˜[01m[K(std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>) ()[m[Kâ€™
  223 |     [01;31m[Kcallback_[m[K();
      |     [01;31m[K^~~~~~~~~[m[K
In file included from [01m[K/home/peter/ros2/UsbCaptureROS4/src/ros2_usbcapture/include/ros2_usbcapture/UsbCaptureSystem.h:9[m[K,
                 from [01m[K/home/peter/ros2/UsbCaptureROS4/src/ros2_usbcapture/include/ros2_usbcapture/RosNode.h:4[m[K,
                 from [01m[K/home/peter/ros2/UsbCaptureROS4/src/ros2_usbcapture/src/RosNode.cpp:1[m[K:
[01m[K/usr/include/c++/9/functional:480:2:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) [with _Args = {_Args ...}; _Result = _Result; _Functor = void (wmj::camera_node::*)(); _Bound_args = {wmj::camera_node*, std::_Placeholder<1>}][m[Kâ€™
  480 |  [01;36m[Koperator[m[K()(_Args&&... __args)
      |  [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/functional:480:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/9/functional: In substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _BoundArg, class _CallArgs> using _Mu_type = decltype (std::_Mu<typename std::remove_cv<_Up>::type>()(declval<_BoundArg&>(), declval<_CallArgs&>())) [with _BoundArg = std::_Placeholder<1>; _CallArgs = std::tuple<>; _Functor = void (wmj::camera_node::*)(); _Bound_args = {wmj::camera_node*, std::_Placeholder<1>}][m[Kâ€™:
[01m[K/usr/include/c++/9/functional:443:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(std::_Bind<_Functor(_Bound_args ...)>::_Mu_type<_BArgs, _CallArgs>&& ...)>::type [with _Fn = void (wmj::camera_node::*)(); _CallArgs = std::tuple<>; _BArgs = {wmj::camera_node*, std::_Placeholder<1>}; _Functor = void (wmj::camera_node::*)(); _Bound_args = {wmj::camera_node*, std::_Placeholder<1>}][m[Kâ€™
[01m[K/usr/include/c++/9/functional:447:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs> using _Res_type = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<_Functor, _CallArgs, _Bound_args ...> [with _CallArgs = std::tuple<>; _Functor = void (wmj::camera_node::*)(); _Bound_args = {wmj::camera_node*, std::_Placeholder<1>}][m[Kâ€™
[01m[K/usr/include/c++/9/functional:478:9:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[01m[K/opt/ros/foxy/include/rclcpp/timer.hpp:209:5:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[01m[K/opt/ros/foxy/include/rclcpp/timer.hpp:199:3:[m[K   required from here
[01m[K/usr/include/c++/9/functional:439:48:[m[K [01;31m[Kerror: [m[Kno match for call to â€˜[01m[K(std::_Mu<std::_Placeholder<1>, false, true>) (std::_Placeholder<1>&, std::tuple<>&)[m[Kâ€™
  439 |      [01;31m[K_Mu<typename remove_cv<_BoundArg>::type>()([m[K
      |      [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
  440 | [01;31m[K       std::declval<_BoundArg&>(), std::declval<_CallArgs&>())[m[K );
      |        [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/functional:345:2:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tuple> std::_Safe_tuple_element_t<(std::is_placeholder<_Tp>::value - 1), _Tuple>&& std::_Mu<_Arg, false, true>::operator()(const volatile _Arg&, _Tuple&) const volatile [with _Tuple = _Tuple; _Arg = std::_Placeholder<1>][m[Kâ€™
  345 |  [01;36m[Koperator[m[K()(const volatile _Arg&, _Tuple& __tuple) const volatile
      |  [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/functional:345:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/9/functional: In substitution of â€˜[01m[Ktemplate<long unsigned int __i, class _Tuple> using _Safe_tuple_element_t = typename std::enable_if<(__i < std::tuple_size<_Tuple>::value), std::tuple_element<__i, _Tuple> >::type::type [with long unsigned int __i = (1 - 1); _Tuple = std::tuple<>][m[Kâ€™:
[01m[K/usr/include/c++/9/functional:345:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tuple> std::_Safe_tuple_element_t<0, _Tuple>&& std::_Mu<std::_Placeholder<1>, false, true>::operator()<_Tuple>(const volatile std::_Placeholder<1>&, _Tuple&) const volatile [with _Tuple = std::tuple<>][m[Kâ€™
[01m[K/usr/include/c++/9/functional:439:48:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _BoundArg, class _CallArgs> using _Mu_type = decltype (std::_Mu<typename std::remove_cv<_Up>::type>()(declval<_BoundArg&>(), declval<_CallArgs&>())) [with _BoundArg = std::_Placeholder<1>; _CallArgs = std::tuple<>; _Functor = void (wmj::camera_node::*)(); _Bound_args = {wmj::camera_node*, std::_Placeholder<1>}][m[Kâ€™
[01m[K/usr/include/c++/9/functional:443:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(std::_Bind<_Functor(_Bound_args ...)>::_Mu_type<_BArgs, _CallArgs>&& ...)>::type [with _Fn = void (wmj::camera_node::*)(); _CallArgs = std::tuple<>; _BArgs = {wmj::camera_node*, std::_Placeholder<1>}; _Functor = void (wmj::camera_node::*)(); _Bound_args = {wmj::camera_node*, std::_Placeholder<1>}][m[Kâ€™
[01m[K/usr/include/c++/9/functional:447:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs> using _Res_type = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<_Functor, _CallArgs, _Bound_args ...> [with _CallArgs = std::tuple<>; _Functor = void (wmj::camera_node::*)(); _Bound_args = {wmj::camera_node*, std::_Placeholder<1>}][m[Kâ€™
[01m[K/usr/include/c++/9/functional:478:9:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[01m[K/opt/ros/foxy/include/rclcpp/timer.hpp:209:5:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[01m[K/opt/ros/foxy/include/rclcpp/timer.hpp:199:3:[m[K   required from here
[01m[K/usr/include/c++/9/functional:260:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::tuple_element<0, std::tuple<> > >[m[Kâ€™
  260 |     using [01;31m[K_Safe_tuple_element_t[m[K
      |           [01;31m[K^~~~~~~~~~~~~~~~~~~~~[m[K
/opt/ros/foxy/include/rclcpp/timer.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™:
[01m[K/opt/ros/foxy/include/rclcpp/timer.hpp:209:5:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[01m[K/opt/ros/foxy/include/rclcpp/timer.hpp:199:3:[m[K   required from here
[01m[K/usr/include/c++/9/functional:491:2:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) const [with _Args = {_Args ...}; _Result = _Result; _Functor = void (wmj::camera_node::*)(); _Bound_args = {wmj::camera_node*, std::_Placeholder<1>}][m[Kâ€™
  491 |  [01;36m[Koperator[m[K()(_Args&&... __args) const
      |  [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/functional:491:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/9/functional: In substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _BoundArg, class _CallArgs> using _Mu_type = decltype (std::_Mu<typename std::remove_cv<_Up>::type>()(declval<_BoundArg&>(), declval<_CallArgs&>())) [with _BoundArg = const std::_Placeholder<1>; _CallArgs = std::tuple<>; _Functor = void (wmj::camera_node::*)(); _Bound_args = {wmj::camera_node*, std::_Placeholder<1>}][m[Kâ€™:
[01m[K/usr/include/c++/9/functional:443:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(std::_Bind<_Functor(_Bound_args ...)>::_Mu_type<_BArgs, _CallArgs>&& ...)>::type [with _Fn = std::add_const<void (wmj::camera_node::*)()>::type; _CallArgs = std::tuple<>; _BArgs = {std::add_const<wmj::camera_node*>::type, std::add_const<std::_Placeholder<1> >::type}; _Functor = void (wmj::camera_node::*)(); _Bound_args = {wmj::camera_node*, std::_Placeholder<1>}][m[Kâ€™
[01m[K/usr/include/c++/9/functional:454:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs, template<class _CallArgs, template<class> class __cv_quals> template<class _Functor, class ... _Bound_args> template<class> class __cv_quals> using _Res_type_cv = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<typename __cv_quals<typename std::enable_if<(bool)((std::tuple_size<_Tuple>::value + 1)), _Functor>::type>::type, _CallArgs, typename __cv_quals<_Bound_args>::type ...> [with _CallArgs = std::tuple<>; __cv_quals = std::add_const; _Functor = void (wmj::camera_node::*)(); _Bound_args = {wmj::camera_node*, std::_Placeholder<1>}][m[Kâ€™
[01m[K/usr/include/c++/9/functional:489:9:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[01m[K/opt/ros/foxy/include/rclcpp/timer.hpp:209:5:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[01m[K/opt/ros/foxy/include/rclcpp/timer.hpp:199:3:[m[K   required from here
[01m[K/usr/include/c++/9/functional:439:48:[m[K [01;31m[Kerror: [m[Kno match for call to â€˜[01m[K(std::_Mu<std::_Placeholder<1>, false, true>) (const std::_Placeholder<1>&, std::tuple<>&)[m[Kâ€™
  439 |      [01;31m[K_Mu<typename remove_cv<_BoundArg>::type>()([m[K
      |      [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
  440 | [01;31m[K       std::declval<_BoundArg&>(), std::declval<_CallArgs&>())[m[K );
      |        [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/functional:345:2:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tuple> std::_Safe_tuple_element_t<(std::is_placeholder<_Tp>::value - 1), _Tuple>&& std::_Mu<_Arg, false, true>::operator()(const volatile _Arg&, _Tuple&) const volatile [with _Tuple = _Tuple; _Arg = std::_Placeholder<1>][m[Kâ€™
  345 |  [01;36m[Koperator[m[K()(const volatile _Arg&, _Tuple& __tuple) const volatile
      |  [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/functional:345:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/opt/ros/foxy/include/rclcpp/timer.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™:
[01m[K/opt/ros/foxy/include/rclcpp/timer.hpp:209:5:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[01m[K/opt/ros/foxy/include/rclcpp/timer.hpp:199:3:[m[K   required from here
[01m[K/usr/include/c++/9/functional:509:2:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) volatile [with _Args = {_Args ...}; _Result = _Result; _Functor = void (wmj::camera_node::*)(); _Bound_args = {wmj::camera_node*, std::_Placeholder<1>}][m[Kâ€™
  509 |  [01;36m[Koperator[m[K()(_Args&&... __args) volatile
      |  [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/functional:509:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/9/functional: In substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _BoundArg, class _CallArgs> using _Mu_type = decltype (std::_Mu<typename std::remove_cv<_Up>::type>()(declval<_BoundArg&>(), declval<_CallArgs&>())) [with _BoundArg = volatile std::_Placeholder<1>; _CallArgs = std::tuple<>; _Functor = void (wmj::camera_node::*)(); _Bound_args = {wmj::camera_node*, std::_Placeholder<1>}][m[Kâ€™:
[01m[K/usr/include/c++/9/functional:443:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(std::_Bind<_Functor(_Bound_args ...)>::_Mu_type<_BArgs, _CallArgs>&& ...)>::type [with _Fn = std::add_volatile<void (wmj::camera_node::*)()>::type; _CallArgs = std::tuple<>; _BArgs = {std::add_volatile<wmj::camera_node*>::type, std::add_volatile<std::_Placeholder<1> >::type}; _Functor = void (wmj::camera_node::*)(); _Bound_args = {wmj::camera_node*, std::_Placeholder<1>}][m[Kâ€™
[01m[K/usr/include/c++/9/functional:454:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs, template<class _CallArgs, template<class> class __cv_quals> template<class _Functor, class ... _Bound_args> template<class> class __cv_quals> using _Res_type_cv = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<typename __cv_quals<typename std::enable_if<(bool)((std::tuple_size<_Tuple>::value + 1)), _Functor>::type>::type, _CallArgs, typename __cv_quals<_Bound_args>::type ...> [with _CallArgs = std::tuple<>; __cv_quals = std::add_volatile; _Functor = void (wmj::camera_node::*)(); _Bound_args = {wmj::camera_node*, std::_Placeholder<1>}][m[Kâ€™
[01m[K/usr/include/c++/9/functional:506:9:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[01m[K/opt/ros/foxy/include/rclcpp/timer.hpp:209:5:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[01m[K/opt/ros/foxy/include/rclcpp/timer.hpp:199:3:[m[K   required from here
[01m[K/usr/include/c++/9/functional:439:48:[m[K [01;31m[Kerror: [m[Kno match for call to â€˜[01m[K(std::_Mu<std::_Placeholder<1>, false, true>) (volatile std::_Placeholder<1>&, std::tuple<>&)[m[Kâ€™
  439 |      [01;31m[K_Mu<typename remove_cv<_BoundArg>::type>()([m[K
      |      [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
  440 | [01;31m[K       std::declval<_BoundArg&>(), std::declval<_CallArgs&>())[m[K );
      |        [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/functional:345:2:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tuple> std::_Safe_tuple_element_t<(std::is_placeholder<_Tp>::value - 1), _Tuple>&& std::_Mu<_Arg, false, true>::operator()(const volatile _Arg&, _Tuple&) const volatile [with _Tuple = _Tuple; _Arg = std::_Placeholder<1>][m[Kâ€™
  345 |  [01;36m[Koperator[m[K()(const volatile _Arg&, _Tuple& __tuple) const volatile
      |  [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/functional:345:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/opt/ros/foxy/include/rclcpp/timer.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™:
[01m[K/opt/ros/foxy/include/rclcpp/timer.hpp:209:5:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[01m[K/opt/ros/foxy/include/rclcpp/timer.hpp:199:3:[m[K   required from here
[01m[K/usr/include/c++/9/functional:521:2:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) const volatile [with _Args = {_Args ...}; _Result = _Result; _Functor = void (wmj::camera_node::*)(); _Bound_args = {wmj::camera_node*, std::_Placeholder<1>}][m[Kâ€™
  521 |  [01;36m[Koperator[m[K()(_Args&&... __args) const volatile
      |  [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/functional:521:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/9/functional: In substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _BoundArg, class _CallArgs> using _Mu_type = decltype (std::_Mu<typename std::remove_cv<_Up>::type>()(declval<_BoundArg&>(), declval<_CallArgs&>())) [with _BoundArg = const volatile std::_Placeholder<1>; _CallArgs = std::tuple<>; _Functor = void (wmj::camera_node::*)(); _Bound_args = {wmj::camera_node*, std::_Placeholder<1>}][m[Kâ€™:
[01m[K/usr/include/c++/9/functional:443:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(std::_Bind<_Functor(_Bound_args ...)>::_Mu_type<_BArgs, _CallArgs>&& ...)>::type [with _Fn = std::add_cv<void (wmj::camera_node::*)()>::type; _CallArgs = std::tuple<>; _BArgs = {std::add_cv<wmj::camera_node*>::type, std::add_cv<std::_Placeholder<1> >::type}; _Functor = void (wmj::camera_node::*)(); _Bound_args = {wmj::camera_node*, std::_Placeholder<1>}][m[Kâ€™
[01m[K/usr/include/c++/9/functional:454:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs, template<class _CallArgs, template<class> class __cv_quals> template<class _Functor, class ... _Bound_args> template<class> class __cv_quals> using _Res_type_cv = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<typename __cv_quals<typename std::enable_if<(bool)((std::tuple_size<_Tuple>::value + 1)), _Functor>::type>::type, _CallArgs, typename __cv_quals<_Bound_args>::type ...> [with _CallArgs = std::tuple<>; __cv_quals = std::add_cv; _Functor = void (wmj::camera_node::*)(); _Bound_args = {wmj::camera_node*, std::_Placeholder<1>}][m[Kâ€™
[01m[K/usr/include/c++/9/functional:518:9:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[01m[K/opt/ros/foxy/include/rclcpp/timer.hpp:209:5:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (wmj::camera_node::*(wmj::camera_node*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[01m[K/opt/ros/foxy/include/rclcpp/timer.hpp:199:3:[m[K   required from here
[01m[K/usr/include/c++/9/functional:439:48:[m[K [01;31m[Kerror: [m[Kno match for call to â€˜[01m[K(std::_Mu<std::_Placeholder<1>, false, true>) (const volatile std::_Placeholder<1>&, std::tuple<>&)[m[Kâ€™
  439 |      [01;31m[K_Mu<typename remove_cv<_BoundArg>::type>()([m[K
      |      [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
  440 | [01;31m[K       std::declval<_BoundArg&>(), std::declval<_CallArgs&>())[m[K );
      |        [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/functional:345:2:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tuple> std::_Safe_tuple_element_t<(std::is_placeholder<_Tp>::value - 1), _Tuple>&& std::_Mu<_Arg, false, true>::operator()(const volatile _Arg&, _Tuple&) const volatile [with _Tuple = _Tuple; _Arg = std::_Placeholder<1>][m[Kâ€™
  345 |  [01;36m[Koperator[m[K()(const volatile _Arg&, _Tuple& __tuple) const volatile
      |  [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/functional:345:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
make[2]: *** [CMakeFiles/camera_component.dir/build.make:63ï¼šCMakeFiles/camera_component.dir/src/RosNode.cpp.o] é”™è¯¯ 1
make[1]: *** [CMakeFiles/Makefile2:107ï¼šCMakeFiles/camera_component.dir/all] é”™è¯¯ 2
make: *** [Makefile:141ï¼šall] é”™è¯¯ 2
